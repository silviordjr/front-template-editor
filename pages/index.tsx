import Head from 'next/head'
import Image from 'next/image'
import useProtectedPage from './../hooks/useProtectedPage';
import { useEffect } from 'react';
import { useState } from 'react';
import UserCard from './../components/UserCard';
import FilesCard from '../components/FilesCard';
import ExampleForm from '../forms/ExampleForm';

const baseUrl = process.env.NEXT_PUBLIC_SERVER_BASE_URL

export default function Home() {
  useProtectedPage()
  const [userInfo, setUserInfo] = useState<any>({})
  const [files, setFiles] = useState<any[]>([])
  const [model, setModel] = useState('')
  const [fileName, setFileName] = useState('')
  const [protectedFile, setProtectedFile] = useState(false)
  const [count, setCount] = useState()

  useEffect(() => {
    const token = localStorage.getItem('token')?.toString()

    const content = {
      headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json',
          'Authorization': `${token}`
      },
      method: 'GET',
    }

    const getData = async () => {
      const data = await fetch(`${baseUrl}/current`, content)
      const user = await data.json()
      

      const filesData = await fetch(`${baseUrl}/files/${user.id}`, content)
      const files = await filesData.json()

      setCount(files.count[0]['count(`id`)'])
      setFiles(files.files)
      setUserInfo(user)
    }

    getData()
  }, [])

  const onChangeOption = (e: any) => {
    e.preventDefault()

    setModel(e.target.value)
  }

  const onChangeProtected = () => {
    setProtectedFile(!protectedFile)
  }

  const onChangeName = (e: any) => {
    e.preventDefault()

    setFileName(e.target.value)
  }

  const renderForm = () => {
    if (model === 'example'){
      return (
        <ExampleForm fileName={fileName} model={model} protectedFile={protectedFile} departament={userInfo.departament} />
      )
    } else {
      return (
        <></>
      )
    }
  }
  return (
    <>
      <Head>
        <title>Gerador de Documentos | CASAL</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/casal_favicon.png" />
      </Head>
      <main className="px-4 lg:px-0 max-w-screen-xl mx-auto my-10 min-h-screen flex flex-col-reverse items-center justify-center lg:flex-row lg:items-start lg:justify-between gap-8">
        <div className='flex flex-col items-start justify-start gap-y-8 w-full lg:w-2/5'>
        <UserCard user={userInfo} />
        <FilesCard user={userInfo} files={files} count={count} />
        </div>
        <div className='w-screen lg:w-full h-fit lg:h-screen border-l-2 flex flex-col items-center'>
          <h1 className='text-2xl font-mono antialiased font-semibold lg:ml-4 w-full text-center mb-8 lg:mb-0'>Escolha o modelo e crie seu arquivo.</h1>
          <div className='lg:ml-4 mt-4 flex flex-col items-start justify-start gap-y-4 lg:gap-y-0 lg:flex-row lg:justify-between lg:items-center w-fit lg:w-full'>
            <div className='flex items-start lg:items-center justify-center'>
              <label htmlFor="modelo" className="font-mono text-md font-light">Modelo: </label>
              <select name="modelo" id="modelo" className='bg-gray-200 w-44 rounded-lg ml-2 cursor-pointer' onChange={onChangeOption}>
                <option value=""></option>
                <option value="example">Exemplo</option>
              </select>
            </div>
            <div className='flex items-start lg:items-center justify-center '>
              <label htmlFor="modelo_nome" className="font-mono text-md font-light">Nome: </label>
              <input type="text" id='nome' name='nome' className='bg-gray-200 w-44 h-6 rounded-lg ml-4' onChange={onChangeName} />
            </div>
            <div className='flex items-center justify-center'>
              <input type="checkbox" id="protected" name="protected" value="protected" onChange={() => onChangeProtected()} className="cursor-pointer" />
              <label htmlFor="protected" className="font-mono text-md font-light ml-4 cursor-pointer" >Arquivo Protegido</label>
            </div>
          </div>
          <div className='flex flex-wrap items-start lg:items-center justify-center w-full'>
            {renderForm()}
          </div>
        </div>
      </main>
    </>
  )
}
