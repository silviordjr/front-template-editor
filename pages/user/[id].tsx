import useProtectedPage from "../../hooks/useProtectedPage"
import { useRouter } from 'next/dist/client/router';
import { useEffect } from 'react';
import { useState } from 'react';
import UserCard from "../../components/UserCard";
import FilesCard from "../../components/FilesCard";
import Head from 'next/head'

const getUser = async (id: string | string []) => {
    const token = localStorage.getItem('token');

    const content = {
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'Authorization': `${token}`
        },
        method: 'GET',
    }

    const data = await fetch(`${process.env.NEXT_PUBLIC_SERVER_BASE_URL}/users/${id}`, content)
    const response = await data.json()

    if (response) {
        return response
    } 
}

const getFiles = async (id: string | string []) => {
    const token = localStorage.getItem('token');

    const content = {
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'Authorization': `${token}`
        },
        method: 'GET',
    }

    const data = await fetch(`${process.env.NEXT_PUBLIC_SERVER_BASE_URL}/files/${id}`, content)
    const response = await data.json()

    if (response) {
        return response
    } 
}

export default function UserPage () {
    useProtectedPage()

    const router = useRouter()
    const id = router.query.id

    const [user, setUser] = useState<any>({})
    const [files, setFiles] = useState<any []>([])
    const [count, setCount] = useState()

    useEffect(() => {
        if (id) {
            getUser(id)
            .then((response) => {
                setUser(response)
            })
            .catch((err) => {
                console.log(err)
            })

            getFiles(id)
            .then((response) => {
                setFiles(response.files)
                setCount(response.count[0]['count(`id`)'])
            })
            .catch((err) => {
                console.log(err)
            })
        }
    }, [])

    
    return (
        <>
            <Head>
                <title>Gerador de Documentos | CASAL | Página do Usuário</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/casal_favicon.png" />
            </Head>
            <main className="px-4 lg:px-0 max-w-screen-xl mx-auto my-10 flex flex-col items-center justify-center md:flex-row md:items-start md:justify-between gap-8">
                <div className="flex flex-col items-center justify-center md:flex-row md:items-start md:justify-start gap-8">
                    <UserCard user={user} />
                    <FilesCard user={user} files={files} count={count} />
                </div>
            </main>
        </>
    )
}